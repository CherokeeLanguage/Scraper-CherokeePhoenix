plugins {
  id "it.gianluz.capsule" version "1.0.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'

group "com.github.CherokeeLanguage"

version = '20200918'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava {
    options.release = 11
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

task fatjar(type: FatCapsule) {
	//-Dfile.encoding=UTF-8
  	archiveName 'Scraper-CherokeePhoenix.jar'
	applicationClass 'com.cherokeelessons.com.scraper.phoenix.Main'
	capsuleManifest {
    	jvmArgs = ['-Dfile.encoding=UTF-8']
	}
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

configurations {
  provided
}

dependencies {
	// https://mvnrepository.com/artifact/com.googlecode.lanterna/lanterna
	implementation 'com.googlecode.lanterna:lanterna:3.0.3'


	implementation 'commons-cli:commons-cli:+'
	implementation 'org.apache.commons:commons-lang3:+'
	implementation 'org.apache.commons:commons-text:+'
	implementation 'org.jsoup:jsoup:1.11.+'
	implementation 'commons-io:commons-io:+'
	
	implementation 'net.sf.cssbox:pdf2dom:+'
	implementation 'com.levigo.jbig2:levigo-jbig2-imageio:2.0'
  
	//required slf4j stuff
	implementation 'org.slf4j:slf4j-jdk14:1.8.+'
	//database
	implementation 'com.h2database:h2:1.4.+'
	implementation 'org.jdbi:jdbi3-core:+'
	implementation 'org.jdbi:jdbi3-sqlobject:+'
}
 
sourceSets {
  main {
    compileClasspath += configurations.provided
  }
  test {
    compileClasspath += configurations.provided
    runtimeClasspath += configurations.provided
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    javadoc.failOnError=false
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
}

task "create-dirs" {
	doLast {
	sourceSets*.java.srcDirs*.each { it.mkdirs() }
	sourceSets*.resources.srcDirs*.each { it.mkdirs() }
	}
}

eclipseJdt {
	doLast {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=utf-8')
    f = file('.settings/org.eclipse.core.runtime.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('line.separator=\\n\n')
	}
}

eclipse {
	project {
		name = 'Scraper-CherokeePhoenix'
	}

	classpath {
		plusConfigurations += [configurations.provided]
		downloadSources = true
		downloadJavadoc = true
	}
}
